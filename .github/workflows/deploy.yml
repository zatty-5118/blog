name: Deploy to GitHub Pages

on:
  # `main` ブランチにプッシュするたびにワークフローを実行します
  # 異なるブランチ名を使用する場合は、`main` をブランチ名に置き換えてください

  push:
    branches:
      - main
      - develop
      - 'feature/**'
  # このワークフローを GitHub の Actions タブから手動で実行できるようにします。
  workflow_dispatch:

# このジョブがリポジトリをクローンし、ページデプロイメントを作成することを許可します。
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NOTION_SECRET: ${{ secrets.NOTION_SECRET }}
      NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
      GOOGLE_TAG_MANAGER: ${{ secrets.GOOGLE_TAG_MANAGER }} 
      MICROCMS_SERVICE_DOMAIN: ${{ secrets.MICROCMS_SERVICE_DOMAIN }} 
      MICROCMS_API_KEY: ${{ secrets.MICROCMS_API_KEY }}
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v4
      - name: Install, build, and upload your site
        uses: withastro/action@v2
        # with:
          # path: . # リポジトリ内のAstroプロジェクトのルートロケーション。(オプション)
          # node-version: 18 # サイト構築に使用するNodeのバージョン。デフォルトは18です。（オプション）
          # package-manager: pnpm@latest # 依存関係のインストールとサイトのビルドに使用する Node パッケージマネージャ。ロックファイルに基づいて自動的に検出されます。(オプション)

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: production-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages (Production)
        id: deployment
        uses: actions/deploy-pages@v4

  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/feature/') || github.ref == 'refs/heads/develop'
    environment:
      name: dev-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages (Staging)
        id: deployment
        uses: actions/deploy-pages@v4