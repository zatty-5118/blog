/* ------------ ▼ px→rem 変換関数 rem(1) = 1px ▼ ------------ */
@use 'sass:math';
$baseFontsize: 16;
@function rem($pixel) {
	@return math.div($pixel, $baseFontsize) * 1rem;
}
/* ------------ ▲ px→rem 変換関数 rem(1) = 1px ▲ ------------ */

$colors: (
  cl-base: #fff,
  cl-base-bg: #f7f7f7,
  cl-text: #333,
  cl-title: #353535,
  cl-primary: #c2d5cb,
  cl-primary-light: #e0eae4,
  cl-primary-dark: #8ab19e,
  cl-gray-text: #7f7f7f,
  cl-gray-border: #ddd,
  cl-gray-bg: #f5f5f5,
  cl-brand-portfolio: #3d85cc,

);

@function cl($key) {
  @return map-get($colors, $key);
}

$breakpoints: (
  'xs': (
    min-width: 0,
  ),
  'sm': (
    min-width: 576px,
  ),
  'md': (
    min-width: 768px,
  ),
  'lg': (
    min-width: 992px,
  ),
  'xl': (
    min-width: 1200px,
  ),
  'xxl': (
    min-width: 1400px,
  ),
) !default; //　~~pxから適用

@mixin responsive($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media screen and #{inspect(map-get($breakpoints,$breakpoint))} {
      @content;
    }
  } @else {
    @error "指定のbreakpointは元々設定されていません。";
  }
}

@mixin inner {
  margin: 0 auto;
  max-width: 430px;
  width: 90%;

  @include responsive(md) {
    max-width: 652.8px;
    width: 100%;    
  }

  @include responsive(lg) {
    max-width: 843.2px;
  }

  @include responsive(xl) {
    max-width: 1020px;
  }

  @include responsive(xxl) {
    max-width: 1190px;
  }

}

@mixin hover {
  @media (hover: hover) {
    &:hover{
      @content;
      transition: 0.3s;
    }
  }
}