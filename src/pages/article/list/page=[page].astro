---
import Layout from '../../../layouts/Layout.astro';
import ArticleCard from '../../../components/modules/Card/ArticleCard';
import Pagination from '../../../components/modules/Pagination/Pagination.astro';
import { Image } from 'astro:assets';
import { BASE_URL } from '../../../scripts/modules/baseURL.js';
import { array__allArticleData } from '../../../scripts/api/microcms/microcmsBlog';

export async function getStaticPaths({paginate}) {

    return paginate(array__allArticleData, {
            pageSize: 15,
        }
    );
}

const { page } = Astro.props;

const totalPageNumber = Math.ceil(page.total / page.size);
let currentPageNumber;
currentPageNumber = page.currentPage;
let width = 1;

const paginationGenerator = () => {
  const prev = currentPageNumber - width
  const next = currentPageNumber + width + 1
  const ranges = []
  const rangeWidthDots = []
  let length;
  for (let i = 1; i <= totalPageNumber; i += 1) {
    if (i === 1 || i === totalPageNumber || (i >= prev && i <= next)) {
      ranges.push(i)
    } else if (i < prev) {
      i = prev - 1
    } else if (i > next) {
      ranges.push(totalPageNumber)
      break
    }
  }
  ranges.forEach((range) => {
    if (length) {
      if (range - length === 2) {
        rangeWidthDots.push(length + 1)
      } else if (range - length !== 1) {
        rangeWidthDots.push('...')
      }
    }
    rangeWidthDots.push(range)
    length = range
  })
  return rangeWidthDots  
}

const hierarchies = [
  {
    position : 2,
    itemName: '全ての記事',
    itemPath: `${BASE_URL}/article/list/page=1`
  },
  {
    position : 3,
    itemName: `${page.currentPage}ページ目`,
    itemPath: `${BASE_URL}/article/list/page=${page.currentPage}`
  },

]

const lists = [
    { 
        name: `全ての記事`,
        path: `${BASE_URL}/article/list/page=1`
    },
    {
        name: `${page.currentPage}ページ目`,
        path: `${BASE_URL}/article/list/page=${page.currentPage}`
    }
]
const boolArticlePage = false;
---

<Layout 
    title=`全ての記事(${page.currentPage}ページ目) | zatty's Blog`
    description="これまで投稿したブログの一覧ページです。"
    url=`${BASE_URL}/article/list/page=${page.currentPage}`
    hierarchies={hierarchies}
    lists={lists}
    articlePage={boolArticlePage}
>
    <main>
        <div class="mainContents">
            <section class="title">
                <h1>全ての記事</h1>
            </section>
            <section class="articleList">
                <ArticleCard articles={page.data} cardType="border" client:load/>
            </section>
            <Pagination
                totalPageNumber={totalPageNumber}
                currentPageNumber={currentPageNumber}
                paginationGenerator={paginationGenerator}
                page={page}
                BASE_URL={BASE_URL}
                category="list"
                slug=""
            />
        </div>    
    </main>
</Layout>